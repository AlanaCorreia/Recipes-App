{"ast":null,"code":"var _jsxFileName = \"/home/alana/Trybe/Turma-17/projetos/Recipes-App/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport MyContext from '../context/myContext';\nimport fetchDrinkApi from '../services/fetchApiDrink';\nimport fetchFoodApi from '../services/fetchApiFood';\nimport { DEFAULT_URL_API, MAX_NUMBER_CARDS, MAX_NUMBER_CATEGORIES } from '../services/consts';\nimport { searchDrinks, searchFoods } from '../services/searchApiByInputs';\nimport { validateDrinks, validateMeals } from '../services/validateDatas';\nimport renderCards from './renderCards';\nimport '../PrincipalPage.css';\nimport '../Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar(_ref) {\n  _s();\n\n  let {\n    name\n  } = _ref;\n  const {\n    searchInput\n  } = useContext(MyContext);\n  const {\n    searchBarShow,\n    handleSearch\n  } = useContext(MyContext);\n  const {\n    radioValue,\n    setRadioValue\n  } = useContext(MyContext);\n  const {\n    ingredientsFilterKey,\n    setIngredientsFilterKey\n  } = useContext(MyContext);\n  const [apiResultsSplited, setApiResultsSplited] = useState({\n    [name]: []\n  });\n  const [categories, setCategories] = useState({\n    [name]: []\n  });\n  const history = useHistory();\n\n  function handleRadio(_ref2) {\n    let {\n      target\n    } = _ref2;\n    setRadioValue(target.value);\n  } // função para realizar as pesquisas\n\n\n  async function searchButton() {\n    if (name === 'meals') {\n      const dataFoodToValidate = await searchFoods(radioValue, searchInput);\n\n      if (dataFoodToValidate.meals === null) {\n        global.alert('Sorry, we haven\\'t found any recipes for these filters.');\n      } else if (dataFoodToValidate.meals.length === 1) {\n        history.push(`/foods/${dataFoodToValidate.meals[0].idMeal}`);\n      } else {\n        validateMeals(name, dataFoodToValidate, setApiResultsSplited);\n      }\n    } else {\n      const dataDrinkToValidate = await searchDrinks(radioValue, searchInput);\n\n      if (dataDrinkToValidate.drinks === null) {\n        global.alert('Sorry, we haven\\'t found any recipes for these filters.');\n      } else if (dataDrinkToValidate.drinks.length === 1) {\n        history.push(`/drinks/${dataDrinkToValidate.drinks[0].idDrink}`);\n      } else {\n        validateDrinks(name, dataDrinkToValidate, setApiResultsSplited);\n      }\n    }\n  } // ComponentDidMout montando os filtros e o retorno default da API\n\n\n  useEffect(() => {\n    const fetchApiInitial = async () => {\n      if (ingredientsFilterKey === false) {\n        if (name === 'meals') {\n          const foodCategories = await fetchFoodApi('list.php?c=list');\n          const splitedfoodCategories = foodCategories[name].slice(0, MAX_NUMBER_CATEGORIES);\n          const foodResponse = await fetchFoodApi(DEFAULT_URL_API);\n          const splitedFoodResponse = foodResponse[name].slice(0, MAX_NUMBER_CARDS);\n          setCategories({\n            [name]: splitedfoodCategories\n          });\n          setApiResultsSplited({\n            [name]: splitedFoodResponse\n          });\n        } else {\n          const drinkCategories = await fetchDrinkApi('list.php?c=list');\n          const splitedDrinkCategories = drinkCategories[name].slice(0, MAX_NUMBER_CATEGORIES);\n          const drinkResponse = await fetchDrinkApi(DEFAULT_URL_API);\n          const splitedDrinkResponse = drinkResponse[name].slice(0, MAX_NUMBER_CARDS);\n          setCategories({\n            [name]: splitedDrinkCategories\n          });\n          setApiResultsSplited({\n            [name]: splitedDrinkResponse\n          });\n        }\n      } else {\n        searchButton();\n        setIngredientsFilterKey(!ingredientsFilterKey);\n      }\n    };\n\n    fetchApiInitial();\n  }, []); // função que renderiza as APIs com o retorno padrão\n\n  async function defaultAPI() {\n    if (name === 'meals') {\n      const foodResponse = await fetchFoodApi(DEFAULT_URL_API);\n      const splitedFoodResponse = foodResponse[name].slice(0, MAX_NUMBER_CARDS);\n      setApiResultsSplited({\n        [name]: splitedFoodResponse\n      });\n    } else {\n      const drinkResponse = await fetchDrinkApi(DEFAULT_URL_API);\n      const splitedDrinkResponse = drinkResponse[name].slice(0, MAX_NUMBER_CARDS);\n      setApiResultsSplited({\n        [name]: splitedDrinkResponse\n      });\n    }\n  } // função para lidar com os botões de filtro\n\n\n  async function filterCategory(event, category) {\n    if (category === 'all') {\n      defaultAPI();\n    } else {\n      const el = document.querySelector('.selected');\n\n      if (el && el !== event.target) {\n        el.className = 'not-selected';\n      }\n\n      if (event.target.className !== 'selected') {\n        event.target.className = 'selected';\n\n        if (name === 'meals') {\n          const foodCategory = await fetchFoodApi(`filter.php?c=${category}`);\n          validateMeals(name, foodCategory, setApiResultsSplited);\n        } else {\n          const drinkCategory = await fetchDrinkApi(`filter.php?c=${category}`);\n          validateDrinks(name, drinkCategory, setApiResultsSplited);\n        }\n      } else {\n        event.target.className = 'not-selected';\n        defaultAPI();\n      }\n    }\n  } // Redireciona para a pagina de details quando clica em algum card\n\n\n  function redirectToDetails(idReceita) {\n    if (name === 'meals') {\n      history.push(`/foods/${idReceita}`);\n    } else {\n      history.push(`/drinks/${idReceita}`);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchBar\",\n    children: [searchBarShow && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"search-input\",\n        label: \"search-input\",\n        type: \"text\",\n        placeholder: \"Search ...\",\n        \"data-testid\": \"search-input\",\n        onChange: handleSearch,\n        value: searchInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingredient\",\n        children: [\"Ingredient\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleRadio,\n          type: \"radio\",\n          id: \"ingredient\",\n          value: \"ingredient\",\n          name: \"radio\",\n          \"data-testid\": \"ingredient-search-radio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleRadio,\n          type: \"radio\",\n          id: \"name\",\n          value: \"name\",\n          name: \"radio\",\n          \"data-testid\": \"name-search-radio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"first-letter\",\n        children: [\"First letter\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleRadio,\n          type: \"radio\",\n          id: \"first-letter\",\n          value: \"first-letter\",\n          name: \"radio\",\n          \"data-testid\": \"first-letter-search-radio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"exec-search-btn\",\n        onClick: searchButton,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"All-category-filter\",\n        className: \"not-selected category-buttons\",\n        onClick: event => filterCategory(event, 'all'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), categories[name].map(_ref3 => {\n        let {\n          strCategory\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": `${strCategory}-category-filter`,\n          className: \"not-selected category-buttons\",\n          onClick: event => filterCategory(event, strCategory),\n          children: strCategory\n        }, strCategory, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), renderCards(apiResultsSplited, name, redirectToDetails)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"p5s1jFua26T+nrDAvI/gaRLXQ58=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/alana/Trybe/Turma-17/projetos/Recipes-App/src/components/SearchBar.js"],"names":["React","useState","useContext","useEffect","PropTypes","useHistory","MyContext","fetchDrinkApi","fetchFoodApi","DEFAULT_URL_API","MAX_NUMBER_CARDS","MAX_NUMBER_CATEGORIES","searchDrinks","searchFoods","validateDrinks","validateMeals","renderCards","SearchBar","name","searchInput","searchBarShow","handleSearch","radioValue","setRadioValue","ingredientsFilterKey","setIngredientsFilterKey","apiResultsSplited","setApiResultsSplited","categories","setCategories","history","handleRadio","target","value","searchButton","dataFoodToValidate","meals","global","alert","length","push","idMeal","dataDrinkToValidate","drinks","idDrink","fetchApiInitial","foodCategories","splitedfoodCategories","slice","foodResponse","splitedFoodResponse","drinkCategories","splitedDrinkCategories","drinkResponse","splitedDrinkResponse","defaultAPI","filterCategory","event","category","el","document","querySelector","className","foodCategory","drinkCategory","redirectToDetails","idReceita","map","strCategory","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport MyContext from '../context/myContext';\nimport fetchDrinkApi from '../services/fetchApiDrink';\nimport fetchFoodApi from '../services/fetchApiFood';\nimport { DEFAULT_URL_API, MAX_NUMBER_CARDS,\n  MAX_NUMBER_CATEGORIES } from '../services/consts';\nimport { searchDrinks, searchFoods } from '../services/searchApiByInputs';\nimport { validateDrinks, validateMeals } from '../services/validateDatas';\nimport renderCards from './renderCards';\nimport '../PrincipalPage.css';\nimport '../Header.css';\n\nfunction SearchBar({ name }) {\n  const { searchInput } = useContext(MyContext);\n  const { searchBarShow, handleSearch } = useContext(MyContext);\n  const { radioValue, setRadioValue } = useContext(MyContext);\n  const { ingredientsFilterKey, setIngredientsFilterKey } = useContext(MyContext);\n  const [apiResultsSplited, setApiResultsSplited] = useState({ [name]: [] });\n  const [categories, setCategories] = useState({ [name]: [] });\n  const history = useHistory();\n  function handleRadio({ target }) {\n    setRadioValue(target.value);\n  }\n  // função para realizar as pesquisas\n  async function searchButton() {\n    if (name === 'meals') {\n      const dataFoodToValidate = await searchFoods(radioValue, searchInput);\n      if (dataFoodToValidate.meals === null) {\n        global.alert('Sorry, we haven\\'t found any recipes for these filters.');\n      } else if (dataFoodToValidate.meals.length === 1) {\n        history.push(`/foods/${dataFoodToValidate.meals[0].idMeal}`);\n      } else {\n        validateMeals(name, dataFoodToValidate, setApiResultsSplited);\n      }\n    } else {\n      const dataDrinkToValidate = await searchDrinks(radioValue, searchInput);\n\n      if (dataDrinkToValidate.drinks === null) {\n        global.alert('Sorry, we haven\\'t found any recipes for these filters.');\n      } else if (dataDrinkToValidate.drinks.length === 1) {\n        history.push(`/drinks/${dataDrinkToValidate.drinks[0].idDrink}`);\n      } else {\n        validateDrinks(name, dataDrinkToValidate, setApiResultsSplited);\n      }\n    }\n  }\n\n  // ComponentDidMout montando os filtros e o retorno default da API\n  useEffect(() => {\n    const fetchApiInitial = async () => {\n      if (ingredientsFilterKey === false) {\n        if (name === 'meals') {\n          const foodCategories = await fetchFoodApi('list.php?c=list');\n          const splitedfoodCategories = foodCategories[name]\n            .slice(0, MAX_NUMBER_CATEGORIES);\n          const foodResponse = await fetchFoodApi(DEFAULT_URL_API);\n          const splitedFoodResponse = foodResponse[name].slice(0, MAX_NUMBER_CARDS);\n          setCategories({ [name]: splitedfoodCategories });\n          setApiResultsSplited({ [name]: splitedFoodResponse });\n        } else {\n          const drinkCategories = await fetchDrinkApi('list.php?c=list');\n          const splitedDrinkCategories = drinkCategories[name]\n            .slice(0, MAX_NUMBER_CATEGORIES);\n          const drinkResponse = await fetchDrinkApi(DEFAULT_URL_API);\n          const splitedDrinkResponse = drinkResponse[name].slice(0, MAX_NUMBER_CARDS);\n          setCategories({ [name]: splitedDrinkCategories });\n          setApiResultsSplited({ [name]: splitedDrinkResponse });\n        }\n      } else {\n        searchButton();\n        setIngredientsFilterKey(!ingredientsFilterKey);\n      }\n    };\n    fetchApiInitial();\n  }, []);\n\n  // função que renderiza as APIs com o retorno padrão\n  async function defaultAPI() {\n    if (name === 'meals') {\n      const foodResponse = await fetchFoodApi(DEFAULT_URL_API);\n      const splitedFoodResponse = foodResponse[name].slice(0, MAX_NUMBER_CARDS);\n      setApiResultsSplited({ [name]: splitedFoodResponse });\n    } else {\n      const drinkResponse = await fetchDrinkApi(DEFAULT_URL_API);\n      const splitedDrinkResponse = drinkResponse[name].slice(0, MAX_NUMBER_CARDS);\n      setApiResultsSplited({ [name]: splitedDrinkResponse });\n    }\n  }\n  // função para lidar com os botões de filtro\n  async function filterCategory(event, category) {\n    if (category === 'all') {\n      defaultAPI();\n    } else {\n      const el = document.querySelector('.selected');\n      if (el && el !== event.target) {\n        el.className = 'not-selected';\n      }\n      if (event.target.className !== 'selected') {\n        event.target.className = 'selected';\n        if (name === 'meals') {\n          const foodCategory = await fetchFoodApi(`filter.php?c=${category}`);\n          validateMeals(name, foodCategory, setApiResultsSplited);\n        } else {\n          const drinkCategory = await fetchDrinkApi(`filter.php?c=${category}`);\n          validateDrinks(name, drinkCategory, setApiResultsSplited);\n        }\n      } else {\n        event.target.className = 'not-selected';\n        defaultAPI();\n      }\n    }\n  }\n\n  // Redireciona para a pagina de details quando clica em algum card\n  function redirectToDetails(idReceita) {\n    if (name === 'meals') {\n      history.push(`/foods/${idReceita}`);\n    } else {\n      history.push(`/drinks/${idReceita}`);\n    }\n  }\n  return (\n    <div className=\"searchBar\">\n      {searchBarShow && (\n        <div>\n          <input\n            name=\"search-input\"\n            label=\"search-input\"\n            type=\"text\"\n            placeholder=\"Search ...\"\n            data-testid=\"search-input\"\n            onChange={ handleSearch }\n            value={ searchInput }\n          />\n          <label htmlFor=\"ingredient\">\n            Ingredient\n            <input\n              onChange={ handleRadio }\n              type=\"radio\"\n              id=\"ingredient\"\n              value=\"ingredient\"\n              name=\"radio\"\n              data-testid=\"ingredient-search-radio\"\n            />\n          </label>\n          <label htmlFor=\"name\">\n            Name\n            <input\n              onChange={ handleRadio }\n              type=\"radio\"\n              id=\"name\"\n              value=\"name\"\n              name=\"radio\"\n              data-testid=\"name-search-radio\"\n            />\n          </label>\n          <label htmlFor=\"first-letter\">\n            First letter\n            <input\n              onChange={ handleRadio }\n              type=\"radio\"\n              id=\"first-letter\"\n              value=\"first-letter\"\n              name=\"radio\"\n              data-testid=\"first-letter-search-radio\"\n            />\n          </label>\n          <button\n            type=\"button\"\n            data-testid=\"exec-search-btn\"\n            onClick={ searchButton }\n          >\n            Search\n          </button>\n        </div>\n      )}\n      <div className=\"category-buttons-container\">\n        <button\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          className=\"not-selected category-buttons\"\n          onClick={ (event) => filterCategory(event, 'all') }\n        >\n          All\n        </button>\n        {categories[name].map(({ strCategory }) => (\n          <button\n            type=\"button\"\n            data-testid={ `${strCategory}-category-filter` }\n            key={ strCategory }\n            className=\"not-selected category-buttons\"\n            onClick={ (event) => filterCategory(event, strCategory) }\n          >\n            {strCategory}\n          </button>\n        ))}\n      </div>\n\n      {renderCards(apiResultsSplited, name, redirectToDetails)}\n    </div>\n  );\n}\nSearchBar.propTypes = {\n  name: PropTypes.string.isRequired,\n};\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}