{"ast":null,"code":"var _jsxFileName = \"/home/alana/Trybe/Turma-17/projetos/Recipes-App/src/pages/DrinksById.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport MyContext from '../context/myContext';\nimport getIngredientsAndMeasure from '../helpers/getIngredientsAndMeasure';\nimport fetchDrinkApi from '../services/fetchApiDrink';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport '../DetailsPage.css';\nimport { checkRecipeFavorite, removeFavoriteRecipe, setStorageFavoriteDrink } from '../helpers/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst copy = require('clipboard-copy');\n\nfunction DrinksById() {\n  _s();\n\n  const history = useHistory();\n  const {\n    location: {\n      pathname\n    }\n  } = history;\n  const [recipeDrink, setRecipeDrink] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measure, setMeasure] = useState([]);\n  const [checkCopy, setCheckCopy] = useState(false);\n  const [checkFavorite, setCheckFavorite] = useState(false);\n  const {\n    mealsRecommendation\n  } = useContext(MyContext);\n  const id = pathname.replace(/[^0-9]/g, '');\n\n  async function getFetchDrinkApi() {\n    const resultsApi = await fetchDrinkApi(`lookup.php?i=${id}`);\n    setRecipeDrink(resultsApi.drinks);\n    const ingredientsReturn = getIngredientsAndMeasure('17', '32', resultsApi.drinks);\n    setIngredients(ingredientsReturn.filter(element => element[0].includes('strIngredient') && element[1] !== null && element[1] !== ''));\n    const measuresReturn = getIngredientsAndMeasure('32', '47', resultsApi.drinks);\n    setMeasure(measuresReturn.filter(element => element[0].includes('strMeasure') && element[1] !== null && element[1] !== ''));\n  }\n\n  function checkIsFavorite() {\n    setCheckFavorite(checkRecipeFavorite(id));\n  }\n\n  useEffect(() => {\n    getFetchDrinkApi();\n    checkIsFavorite();\n  }, []);\n\n  const redirectClick = idRecipe => {\n    history.push(`/drinks/${idRecipe}/in-progress`);\n  };\n\n  function checkRecipe() {\n    const recipeName = recipeDrink.length > 0 ? recipeDrink[0].strDrink : '';\n    const inProgressStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const doneRecipeStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n\n    if (doneRecipeStorage !== null) {\n      const filterDoneRecipe = doneRecipeStorage.filter(_ref => {\n        let {\n          name\n        } = _ref;\n        return name === recipeName;\n      });\n\n      if (filterDoneRecipe.length > 0) {\n        return '';\n      }\n    }\n\n    if (inProgressStorage && inProgressStorage.cocktails && inProgressStorage.cocktails[id]) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"start-recipe-btn\",\n        type: \"button\",\n        onClick: () => redirectClick(id),\n        className: \"button-recipe button-continue\",\n        children: \"Continue Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-testid\": \"start-recipe-btn\",\n      type: \"button\",\n      onClick: () => redirectClick(id),\n      className: \"button-recipe button-start\",\n      children: \"Start recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n  function handleClick(idReceita) {\n    history.push(`/drinks/${idReceita}`);\n  }\n\n  function clipboardCopy(idLink) {\n    copy(`http://localhost:3000/drinks/${idLink}`);\n    setCheckCopy(true);\n  }\n\n  function clickFavorite() {\n    if (checkFavorite) {\n      setCheckFavorite(false);\n      removeFavoriteRecipe(id);\n    } else {\n      setCheckFavorite(true);\n      setStorageFavoriteDrink(recipeDrink[0]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details-page-default\",\n    children: recipeDrink && recipeDrink.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"recipe-photo\",\n        className: \"img-recipe\",\n        src: recipe.strDrinkThumb,\n        alt: recipe.strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-recipe\",\n          \"data-testid\": \"recipe-title\",\n          children: recipe.strDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-testid\": \"share-btn\",\n            type: \"button\",\n            className: \"icon-btn\",\n            onClick: () => clipboardCopy(recipe.idDrink),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: shareIcon,\n              alt: \"share Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"icon-btn\",\n            onClick: clickFavorite,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              \"data-testid\": \"favorite-btn\",\n              src: checkFavorite ? blackHeartIcon : whiteHeartIcon,\n              alt: checkFavorite ? 'black Heart Icon\"' : 'white Heart Icon'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"category\",\n          \"data-testid\": \"recipe-category\",\n          children: recipe.strAlcoholic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this), checkCopy && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Link copied!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"subtitles-recipe\",\n          children: \"Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ingredients-list\",\n          children: ingredients.length > 0 && measure.length > 0 && ingredients.map((element, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-testid\": `${index}-ingredient-name-and-measure`,\n            children: ['- ', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ingredient-text\",\n              children: element[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 23\n            }, this), ' ', measure[index] !== null && measure.length === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"measure-text\",\n              children: measure[0][1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"measure-text\",\n              children: measure[index][1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 27\n            }, this)]\n          }, Math.random(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"subtitles-recipe\",\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"instructions\",\n            className: \"instructions-text\",\n            children: recipe.strInstructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"subtitles-recipe\",\n          children: \"Recommended\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommended-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommended-cards-container\",\n            children: mealsRecommendation.map((meal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-testid\": `${index}-recomendation-card` // link referencia: https://stackoverflow.com/questions/56441825/how-to-fix-button-interactive-role-must-be-focusable\n              ,\n              onClick: () => handleClick(meal.idMeal),\n              onKeyDown: handleClick,\n              role: \"button\",\n              tabIndex: 0,\n              className: \"recommended-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"recommended-img\",\n                \"data-testid\": `${index}-card-img`,\n                src: meal.strMealThumb,\n                alt: meal.strMeal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"recommended-category-text\",\n                children: meal.strCategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                \"data-testid\": `${index}-recomendation-title`,\n                children: [' ', meal.strMeal]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 23\n              }, this)]\n            }, meal.strMeal, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), checkRecipe()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)]\n    }, recipe.idDrink, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrinksById, \"/2ZOZxgIb6jQmPSJ/YQjrqHc8os=\", false, function () {\n  return [useHistory];\n});\n\n_c = DrinksById;\nexport default DrinksById;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrinksById\");","map":{"version":3,"sources":["/home/alana/Trybe/Turma-17/projetos/Recipes-App/src/pages/DrinksById.js"],"names":["React","useState","useEffect","useContext","useHistory","MyContext","getIngredientsAndMeasure","fetchDrinkApi","shareIcon","whiteHeartIcon","blackHeartIcon","checkRecipeFavorite","removeFavoriteRecipe","setStorageFavoriteDrink","copy","require","DrinksById","history","location","pathname","recipeDrink","setRecipeDrink","ingredients","setIngredients","measure","setMeasure","checkCopy","setCheckCopy","checkFavorite","setCheckFavorite","mealsRecommendation","id","replace","getFetchDrinkApi","resultsApi","drinks","ingredientsReturn","filter","element","includes","measuresReturn","checkIsFavorite","redirectClick","idRecipe","push","checkRecipe","recipeName","length","strDrink","inProgressStorage","JSON","parse","localStorage","getItem","doneRecipeStorage","filterDoneRecipe","name","cocktails","handleClick","idReceita","clipboardCopy","idLink","clickFavorite","map","recipe","strDrinkThumb","idDrink","strAlcoholic","index","Math","random","strInstructions","meal","idMeal","strMealThumb","strMeal","strCategory"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport MyContext from '../context/myContext';\nimport getIngredientsAndMeasure from '../helpers/getIngredientsAndMeasure';\nimport fetchDrinkApi from '../services/fetchApiDrink';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport '../DetailsPage.css';\nimport { checkRecipeFavorite, removeFavoriteRecipe,\n  setStorageFavoriteDrink } from '../helpers/localStorage';\n\nconst copy = require('clipboard-copy');\n\nfunction DrinksById() {\n  const history = useHistory();\n  const { location: { pathname } } = history;\n  const [recipeDrink, setRecipeDrink] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measure, setMeasure] = useState([]);\n\n  const [checkCopy, setCheckCopy] = useState(false);\n  const [checkFavorite, setCheckFavorite] = useState(false);\n\n  const { mealsRecommendation } = useContext(MyContext);\n\n  const id = pathname.replace(/[^0-9]/g, '');\n\n  async function getFetchDrinkApi() {\n    const resultsApi = await fetchDrinkApi(`lookup.php?i=${id}`);\n    setRecipeDrink(resultsApi.drinks);\n\n    const ingredientsReturn = getIngredientsAndMeasure('17', '32', resultsApi.drinks);\n    setIngredients(ingredientsReturn\n      .filter((element) => element[0].includes('strIngredient')\n      && element[1] !== null && element[1] !== ''));\n    const measuresReturn = getIngredientsAndMeasure('32', '47', resultsApi.drinks);\n    setMeasure(measuresReturn.filter((element) => element[0].includes('strMeasure')\n    && element[1] !== null && element[1] !== ''));\n  }\n\n  function checkIsFavorite() {\n    setCheckFavorite(checkRecipeFavorite(id));\n  }\n\n  useEffect(() => {\n    getFetchDrinkApi();\n    checkIsFavorite();\n  }, []);\n\n  const redirectClick = (idRecipe) => {\n    history.push(`/drinks/${idRecipe}/in-progress`);\n  };\n\n  function checkRecipe() {\n    const recipeName = recipeDrink.length > 0 ? recipeDrink[0].strDrink : '';\n    const inProgressStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const doneRecipeStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n\n    if (doneRecipeStorage !== null) {\n      const filterDoneRecipe = doneRecipeStorage.filter(({ name }) => (\n        name === recipeName));\n      if (filterDoneRecipe.length > 0) {\n        return '';\n      }\n    }\n\n    if (inProgressStorage && inProgressStorage.cocktails\n       && inProgressStorage.cocktails[id]) {\n      return (\n        <button\n          data-testid=\"start-recipe-btn\"\n          type=\"button\"\n          onClick={ () => redirectClick(id) }\n          className=\"button-recipe button-continue\"\n        >\n          Continue Recipe\n        </button>);\n    }\n\n    return (\n      <button\n        data-testid=\"start-recipe-btn\"\n        type=\"button\"\n        onClick={ () => redirectClick(id) }\n        className=\"button-recipe button-start\"\n      >\n        Start recipe\n      </button>\n    );\n  }\n\n  function handleClick(idReceita) {\n    history.push(`/drinks/${idReceita}`);\n  }\n\n  function clipboardCopy(idLink) {\n    copy(`http://localhost:3000/drinks/${idLink}`);\n    setCheckCopy(true);\n  }\n\n  function clickFavorite() {\n    if (checkFavorite) {\n      setCheckFavorite(false);\n      removeFavoriteRecipe(id);\n    } else {\n      setCheckFavorite(true);\n      setStorageFavoriteDrink(recipeDrink[0]);\n    }\n  }\n\n  return (\n    <div className=\"details-page-default\">\n      {recipeDrink\n        && recipeDrink.map((recipe) => (\n          <div key={ recipe.idDrink }>\n            <img\n              data-testid=\"recipe-photo\"\n              className=\"img-recipe\"\n              src={ recipe.strDrinkThumb }\n              alt={ recipe.strDrink }\n            />\n            <div className=\"header-details-container\">\n              <h1 className=\"title-recipe\" data-testid=\"recipe-title\">\n                {recipe.strDrink}\n              </h1>\n              <div>\n                <button\n                  data-testid=\"share-btn\"\n                  type=\"button\"\n                  className=\"icon-btn\"\n                  onClick={ () => clipboardCopy(recipe.idDrink) }\n                >\n                  <img src={ shareIcon } alt=\"share Icon\" />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"icon-btn\"\n                  onClick={ clickFavorite }\n                >\n                  <img\n                    data-testid=\"favorite-btn\"\n                    src={ checkFavorite\n                      ? blackHeartIcon : whiteHeartIcon }\n                    alt={ checkFavorite\n                      ? 'black Heart Icon\"' : 'white Heart Icon' }\n                  />\n                </button>\n              </div>\n            </div>\n            <div className=\"details-recipe-container\">\n              <p className=\"category\" data-testid=\"recipe-category\">\n                {recipe.strAlcoholic}\n              </p>\n              { checkCopy && (<p>Link copied!</p>)}\n              <h2 className=\"subtitles-recipe\">Ingredients:</h2>\n              <ul className=\"ingredients-list\">\n                {ingredients.length > 0\n                  && measure.length > 0\n                  && ingredients.map((element, index) => (\n                    <li\n                      key={ Math.random() }\n                      data-testid={ `${index}-ingredient-name-and-measure` }\n                    >\n                      {'- '}\n                      <span className=\"ingredient-text\">{element[1]}</span>\n                      {' '}\n                      { measure[index] !== null && measure.length === 1\n                        ? <span className=\"measure-text\">{measure[0][1]}</span>\n                        : <span className=\"measure-text\">{measure[index][1]}</span>}\n                    </li>\n                  ))}\n              </ul>\n              <h2 className=\"subtitles-recipe\">Instructions</h2>\n              <div className=\"instructions-container\">\n                <p data-testid=\"instructions\" className=\"instructions-text\">\n                  {recipe.strInstructions}\n                </p>\n              </div>\n              <h2 className=\"subtitles-recipe\">Recommended</h2>\n              <div className=\"recommended-container\">\n                <div className=\"recommended-cards-container\">\n                  {mealsRecommendation.map((meal, index) => (\n                    <div\n                      key={ meal.strMeal }\n                      data-testid={ `${index}-recomendation-card` }\n                      // link referencia: https://stackoverflow.com/questions/56441825/how-to-fix-button-interactive-role-must-be-focusable\n                      onClick={ () => handleClick(meal.idMeal) }\n                      onKeyDown={ handleClick }\n                      role=\"button\"\n                      tabIndex={ 0 }\n                      className=\"recommended-card\"\n                    >\n                      <img\n                        className=\"recommended-img\"\n                        data-testid={ `${index}-card-img` }\n                        src={ meal.strMealThumb }\n                        alt={ meal.strMeal }\n                      />\n                      <p className=\"recommended-category-text\">\n                        {meal.strCategory}\n                      </p>\n                      <p data-testid={ `${index}-recomendation-title` }>\n                        {' '}\n                        {meal.strMeal}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              { checkRecipe() }\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n}\nexport default DrinksById;\n"]},"metadata":{},"sourceType":"module"}