{"ast":null,"code":"var _jsxFileName = \"/home/alana/Trybe/Turma-17/projetos/Recipes-App/src/context/myProvider.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { DEFAULT_URL_API, MAX_NUMBER_RECOMMEDATIONS } from '../services/consts';\nimport fetchDrinkApi from '../services/fetchApiDrink';\nimport fetchFoodApi from '../services/fetchApiFood';\nimport MyContext from './myContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [searchInput, setsearchInput] = useState('');\n  const [searchBarShow, setSearchBarShow] = useState(false);\n  const [mealsRecommendation, setMealsRecommendation] = useState([]);\n  const [drinkRecommendation, setDrinkRecommendation] = useState([]);\n  const [apiResultsIngredients, setApiResultsIngredients] = useState([]);\n  const [radioValue, setRadioValue] = useState('');\n  const [ingredientFilter, setIngredientFilter] = useState('');\n  const [ingredientsFilterKey, setIngredientsFilterKey] = useState(false);\n\n  function handleSearch(_ref2) {\n    let {\n      target\n    } = _ref2;\n    setsearchInput(target.value);\n  }\n\n  async function getMealsRecommended() {\n    const resultApiMeals = await fetchFoodApi(DEFAULT_URL_API);\n    const recommended = resultApiMeals.meals.slice(0, MAX_NUMBER_RECOMMEDATIONS);\n    setMealsRecommendation(recommended);\n  }\n\n  async function getDrinksRecommended() {\n    const resultApiDrinks = await fetchDrinkApi(DEFAULT_URL_API);\n    const recommended = resultApiDrinks.drinks.slice(0, MAX_NUMBER_RECOMMEDATIONS);\n    setDrinkRecommendation(recommended);\n  }\n\n  useEffect(() => {\n    getMealsRecommended();\n    getDrinksRecommended();\n  }, []);\n  const INITIAL_STATE = {\n    handleSearch,\n    searchInput,\n    setsearchInput,\n    searchBarShow,\n    setSearchBarShow,\n    mealsRecommendation,\n    setMealsRecommendation,\n    drinkRecommendation,\n    setDrinkRecommendation,\n    apiResultsIngredients,\n    setApiResultsIngredients,\n    radioValue,\n    setRadioValue,\n    ingredientFilter,\n    setIngredientFilter,\n    ingredientsFilterKey,\n    setIngredientsFilterKey\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: INITIAL_STATE,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyProvider, \"6kCL0HpD5b2OUKg+9Sa9cGJC8AA=\");\n\n_c = MyProvider;\nMyProvider.propTypes = {\n  children: PropTypes.string\n}.isRequired;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"sources":["/home/alana/Trybe/Turma-17/projetos/Recipes-App/src/context/myProvider.js"],"names":["PropTypes","React","useEffect","useState","DEFAULT_URL_API","MAX_NUMBER_RECOMMEDATIONS","fetchDrinkApi","fetchFoodApi","MyContext","MyProvider","children","searchInput","setsearchInput","searchBarShow","setSearchBarShow","mealsRecommendation","setMealsRecommendation","drinkRecommendation","setDrinkRecommendation","apiResultsIngredients","setApiResultsIngredients","radioValue","setRadioValue","ingredientFilter","setIngredientFilter","ingredientsFilterKey","setIngredientsFilterKey","handleSearch","target","value","getMealsRecommended","resultApiMeals","recommended","meals","slice","getDrinksRecommended","resultApiDrinks","drinks","INITIAL_STATE","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,EAA0BC,yBAA1B,QAA2D,oBAA3D;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,UAAT,OAAkC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAChC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACY,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACc,mBAAD,EAAsBC,sBAAtB,IAAgDf,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACgB,qBAAD,EAAwBC,wBAAxB,IAAoDjB,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACsB,oBAAD,EAAuBC,uBAAvB,IAAkDvB,QAAQ,CAAC,KAAD,CAAhE;;AAEA,WAASwB,YAAT,QAAkC;AAAA,QAAZ;AAAEC,MAAAA;AAAF,KAAY;AAChChB,IAAAA,cAAc,CAACgB,MAAM,CAACC,KAAR,CAAd;AACD;;AAED,iBAAeC,mBAAf,GAAqC;AACnC,UAAMC,cAAc,GAAG,MAAMxB,YAAY,CAACH,eAAD,CAAzC;AACA,UAAM4B,WAAW,GAAGD,cAAc,CAACE,KAAf,CAAqBC,KAArB,CAA2B,CAA3B,EAA8B7B,yBAA9B,CAApB;AACAW,IAAAA,sBAAsB,CAACgB,WAAD,CAAtB;AACD;;AAED,iBAAeG,oBAAf,GAAsC;AACpC,UAAMC,eAAe,GAAG,MAAM9B,aAAa,CAACF,eAAD,CAA3C;AACA,UAAM4B,WAAW,GAAGI,eAAe,CAACC,MAAhB,CAAuBH,KAAvB,CAA6B,CAA7B,EAAgC7B,yBAAhC,CAApB;AACAa,IAAAA,sBAAsB,CAACc,WAAD,CAAtB;AACD;;AAED9B,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,mBAAmB;AACnBK,IAAAA,oBAAoB;AACrB,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMG,aAAa,GAAG;AACpBX,IAAAA,YADoB;AAEpBhB,IAAAA,WAFoB;AAGpBC,IAAAA,cAHoB;AAIpBC,IAAAA,aAJoB;AAKpBC,IAAAA,gBALoB;AAMpBC,IAAAA,mBANoB;AAOpBC,IAAAA,sBAPoB;AAQpBC,IAAAA,mBARoB;AASpBC,IAAAA,sBAToB;AAUpBC,IAAAA,qBAVoB;AAWpBC,IAAAA,wBAXoB;AAYpBC,IAAAA,UAZoB;AAapBC,IAAAA,aAboB;AAcpBC,IAAAA,gBAdoB;AAepBC,IAAAA,mBAfoB;AAgBpBC,IAAAA,oBAhBoB;AAiBpBC,IAAAA;AAjBoB,GAAtB;AAmBA,sBACE,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAGY,aAA5B;AAAA,cACG5B;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAvDQD,U;;KAAAA,U;AAwDTA,UAAU,CAAC8B,SAAX,GAAuB;AACrB7B,EAAAA,QAAQ,EAAEV,SAAS,CAACwC;AADC,EAErBC,UAFF;AAGA,eAAehC,UAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { DEFAULT_URL_API, MAX_NUMBER_RECOMMEDATIONS } from '../services/consts';\nimport fetchDrinkApi from '../services/fetchApiDrink';\nimport fetchFoodApi from '../services/fetchApiFood';\nimport MyContext from './myContext';\n\nfunction MyProvider({ children }) {\n  const [searchInput, setsearchInput] = useState('');\n  const [searchBarShow, setSearchBarShow] = useState(false);\n  const [mealsRecommendation, setMealsRecommendation] = useState([]);\n  const [drinkRecommendation, setDrinkRecommendation] = useState([]);\n  const [apiResultsIngredients, setApiResultsIngredients] = useState([]);\n  const [radioValue, setRadioValue] = useState('');\n  const [ingredientFilter, setIngredientFilter] = useState('');\n  const [ingredientsFilterKey, setIngredientsFilterKey] = useState(false);\n\n  function handleSearch({ target }) {\n    setsearchInput(target.value);\n  }\n\n  async function getMealsRecommended() {\n    const resultApiMeals = await fetchFoodApi(DEFAULT_URL_API);\n    const recommended = resultApiMeals.meals.slice(0, MAX_NUMBER_RECOMMEDATIONS);\n    setMealsRecommendation(recommended);\n  }\n\n  async function getDrinksRecommended() {\n    const resultApiDrinks = await fetchDrinkApi(DEFAULT_URL_API);\n    const recommended = resultApiDrinks.drinks.slice(0, MAX_NUMBER_RECOMMEDATIONS);\n    setDrinkRecommendation(recommended);\n  }\n\n  useEffect(() => {\n    getMealsRecommended();\n    getDrinksRecommended();\n  }, []);\n\n  const INITIAL_STATE = {\n    handleSearch,\n    searchInput,\n    setsearchInput,\n    searchBarShow,\n    setSearchBarShow,\n    mealsRecommendation,\n    setMealsRecommendation,\n    drinkRecommendation,\n    setDrinkRecommendation,\n    apiResultsIngredients,\n    setApiResultsIngredients,\n    radioValue,\n    setRadioValue,\n    ingredientFilter,\n    setIngredientFilter,\n    ingredientsFilterKey,\n    setIngredientsFilterKey,\n  };\n  return (\n    <MyContext.Provider value={ INITIAL_STATE }>\n      {children}\n    </MyContext.Provider>\n  );\n}\nMyProvider.propTypes = {\n  children: PropTypes.string,\n}.isRequired;\nexport default MyProvider;\n"]},"metadata":{},"sourceType":"module"}