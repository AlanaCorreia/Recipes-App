{"ast":null,"code":"var _jsxFileName = \"/home/alana/Trybe/Turma-17/projetos/Recipes-App/src/components/RenderCardsIngredients.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/myContext';\nimport '../ExploreByIngredient.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderCardsIngredients(_ref) {\n  _s();\n\n  let {\n    name\n  } = _ref;\n  const {\n    apiResultsIngredients\n  } = useContext(MyContext);\n  const {\n    setIngredientsFilterKey\n  } = useContext(MyContext);\n  const {\n    setRadioValue\n  } = useContext(MyContext);\n  const {\n    setsearchInput\n  } = useContext(MyContext);\n  const history = useHistory();\n\n  const redirectToPrincipalPage = ingredient => {\n    if (name === 'meals') {\n      setIngredientsFilterKey(true);\n      setsearchInput(ingredient);\n      setRadioValue('ingredient');\n      history.push('/foods');\n    } else {\n      setIngredientsFilterKey(true);\n      setsearchInput(ingredient);\n      setRadioValue('ingredient');\n      history.push('/drinks');\n    }\n  };\n\n  return apiResultsIngredients.length > 0 && name === 'meals' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [apiResultsIngredients.map((_ref2, index) => {\n      let {\n        strIngredient\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-card\",\n        value: strIngredient,\n        \"data-testid\": `${index}-ingredient-card`,\n        onClick: () => redirectToPrincipalPage(strIngredient),\n        onKeyDown: redirectToPrincipalPage,\n        role: \"button\",\n        tabIndex: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-card\",\n          \"data-testid\": `${index}-card-name`,\n          children: [' ', strIngredient]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: '300px'\n          },\n          \"data-testid\": `${index}-card-img`,\n          src: `https://www.themealdb.com/images/ingredients/${strIngredient}-Small.png`,\n          alt: strIngredient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, `${strIngredient}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [apiResultsIngredients.map((_ref3, index) => {\n      let {\n        strIngredient1\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-card\",\n        value: strIngredient1,\n        \"data-testid\": `${index}-ingredient-card`,\n        onClick: () => redirectToPrincipalPage(strIngredient1),\n        onKeyDown: redirectToPrincipalPage,\n        role: \"button\",\n        tabIndex: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-card\",\n          \"data-testid\": `${index}-card-name`,\n          children: [' ', strIngredient1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: '300px'\n          },\n          \"data-testid\": `${index}-card-img`,\n          src: `https://www.thecocktaildb.com/images/ingredients/${strIngredient1}-Small.png`,\n          alt: strIngredient1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, `${strIngredient1}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    }), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RenderCardsIngredients, \"CTv3mVwT9eK8KJ46WrnW5mGULIg=\", false, function () {\n  return [useHistory];\n});\n\n_c = RenderCardsIngredients;\nRenderCardsIngredients.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport default RenderCardsIngredients;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderCardsIngredients\");","map":{"version":3,"sources":["/home/alana/Trybe/Turma-17/projetos/Recipes-App/src/components/RenderCardsIngredients.js"],"names":["React","useContext","useHistory","PropTypes","MyContext","RenderCardsIngredients","name","apiResultsIngredients","setIngredientsFilterKey","setRadioValue","setsearchInput","history","redirectToPrincipalPage","ingredient","push","length","map","index","strIngredient","width","strIngredient1","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import { React, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/myContext';\nimport '../ExploreByIngredient.css';\n\nfunction RenderCardsIngredients({ name }) {\n  const { apiResultsIngredients } = useContext(MyContext);\n  const { setIngredientsFilterKey } = useContext(MyContext);\n  const { setRadioValue } = useContext(MyContext);\n  const { setsearchInput } = useContext(MyContext);\n  const history = useHistory();\n\n  const redirectToPrincipalPage = (ingredient) => {\n    if (name === 'meals') {\n      setIngredientsFilterKey(true);\n      setsearchInput(ingredient);\n      setRadioValue('ingredient');\n      history.push('/foods');\n    } else {\n      setIngredientsFilterKey(true);\n      setsearchInput(ingredient);\n      setRadioValue('ingredient');\n      history.push('/drinks');\n    }\n  };\n\n  return apiResultsIngredients.length > 0 && name === 'meals' ? (\n    <div className=\"container\">\n      { apiResultsIngredients.map(({ strIngredient }, index) => (\n        <div\n          className=\"container-card\"\n          value={ strIngredient }\n          key={ `${strIngredient}-${index}` }\n          data-testid={ `${index}-ingredient-card` }\n          onClick={ () => redirectToPrincipalPage(strIngredient) }\n          onKeyDown={ redirectToPrincipalPage }\n          role=\"button\"\n          tabIndex={ 0 }\n        >\n          <p className=\"title-card\" data-testid={ `${index}-card-name` }>\n            {' '}\n            {strIngredient}\n          </p>\n          <img\n            style={ { width: '300px' } }\n            data-testid={ `${index}-card-img` }\n            src={ `https://www.themealdb.com/images/ingredients/${strIngredient}-Small.png` }\n            alt={ strIngredient }\n          />\n        </div>\n      ))}\n      ;\n    </div>\n  ) : (\n    <div className=\"container\">\n      { apiResultsIngredients.map(({ strIngredient1 }, index) => (\n        <div\n          className=\"container-card\"\n          value={ strIngredient1 }\n          key={ `${strIngredient1}-${index}` }\n          data-testid={ `${index}-ingredient-card` }\n          onClick={ () => redirectToPrincipalPage(strIngredient1) }\n          onKeyDown={ redirectToPrincipalPage }\n          role=\"button\"\n          tabIndex={ 0 }\n        >\n          <p className=\"title-card\" data-testid={ `${index}-card-name` }>\n            {' '}\n            {strIngredient1}\n          </p>\n          <img\n            style={ { width: '300px' } }\n            data-testid={ `${index}-card-img` }\n            src={ `https://www.thecocktaildb.com/images/ingredients/${strIngredient1}-Small.png` }\n            alt={ strIngredient1 }\n          />\n        </div>\n      ))}\n      ;\n    </div>\n  );\n}\n\nRenderCardsIngredients.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default RenderCardsIngredients;\n"]},"metadata":{},"sourceType":"module"}